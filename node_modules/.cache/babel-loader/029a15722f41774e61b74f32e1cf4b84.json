{"ast":null,"code":"var _jsxFileName = \"/Users/minageorge/Workspace/Minaroid/JS/book-tracking/src/pages/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport { BookList } from \"../components/BooksList\";\nimport { search, update, getAll } from \"../BooksAPI\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchPage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [books, setBooks] = useState([]);\n  const [myBooks, setMyBooks] = useState([]);\n  useEffect(() => {\n    fetchMyBooks();\n  }, []);\n\n  const fetchMyBooks = async () => {\n    await getAll().then(books => setMyBooks(books));\n  };\n\n  const queryValueChange = async query => {\n    await search(query, 20).then(booksResults => {\n      booksResults === null || booksResults === void 0 ? void 0 : booksResults.forEach(book => {\n        var _myBooks$map;\n\n        if ((myBooks === null || myBooks === void 0 ? void 0 : (_myBooks$map = myBooks.map(e => e.id)) === null || _myBooks$map === void 0 ? void 0 : _myBooks$map.includes(book.id)) === true) {\n          var _myBooks$find;\n\n          book.shelf = myBooks === null || myBooks === void 0 ? void 0 : (_myBooks$find = myBooks.find(e => e.id === book.id)) === null || _myBooks$find === void 0 ? void 0 : _myBooks$find.shelf;\n        }\n      });\n      setBooks(booksResults);\n    }).catch(e => setBooks([]));\n  };\n\n  const updateBook = async (book, shelf) => {\n    var _myBooks$map2;\n\n    await update(book, shelf);\n\n    if (myBooks === null || myBooks === void 0 ? void 0 : (_myBooks$map2 = myBooks.map(e => e.id)) === null || _myBooks$map2 === void 0 ? void 0 : _myBooks$map2.includes(book.id)) {\n      const oldBook = myBooks === null || myBooks === void 0 ? void 0 : myBooks.find(e => e.id === book.id);\n      oldBook.shelf = shelf;\n    } else {\n      book.shelf = shelf;\n      setMyBooks([...myBooks, book]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"close-search\",\n        onClick: () => navigate(-1),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => queryValueChange(e.target.value),\n          placeholder: \"Search by title, author, or ISBN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      title: \"Search Results: \",\n      books: books,\n      onOptionSelected: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchPage, \"uw81JB4maDy3TfuptNfnaSC79lE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/minageorge/Workspace/Minaroid/JS/book-tracking/src/pages/SearchPage.js"],"names":["BookList","search","update","getAll","useNavigate","useEffect","useState","SearchPage","navigate","books","setBooks","myBooks","setMyBooks","fetchMyBooks","then","queryValueChange","query","booksResults","forEach","book","map","e","id","includes","shelf","find","catch","updateBook","oldBook","target","value"],"mappings":"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","sourcesContent":["import { BookList } from \"../components/BooksList\";\nimport { search, update, getAll } from \"../BooksAPI\";\nimport {useNavigate} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nexport const SearchPage = () => {\n    const navigate = useNavigate();\n    const [books, setBooks] = useState([]);\n    const [myBooks, setMyBooks] = useState([]);\n\n    useEffect(() => {\n        fetchMyBooks()\n      },[])\n    \n    const fetchMyBooks = async() => {\n        await getAll().then((books) => setMyBooks(books))\n      }\n      \n    const queryValueChange = async(query) => {\n      await search(query, 20).then((booksResults) => {\n      booksResults?.forEach((book) => {\n          if(myBooks?.map(e => e.id)?.includes(book.id) === true){\n            book.shelf = myBooks?.find(e => e.id === book.id)?.shelf\n          }\n        });\n  \n        setBooks(booksResults)\n      }).catch((e) => setBooks([]))\n    }\n\n    const updateBook = async(book, shelf) => {\n      await update(book, shelf)\n      if (myBooks?.map(e => e.id)?.includes(book.id)) {\n        const oldBook = myBooks?.find(e => e.id === book.id)\n        oldBook.shelf = shelf\n      }else {\n        book.shelf = shelf\n        setMyBooks([...myBooks, book])\n      }   \n    }\n\n    return (\n      <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <a className=\"close-search\"\n               onClick={() => navigate(-1)}>\n                Close\n            </a>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                onChange ={(e) => queryValueChange(e.target.value)}\n                placeholder=\"Search by title, author, or ISBN\"\n              />\n            </div>\n          </div>\n          <BookList title = {\"Search Results: \"} books = {books} onOptionSelected = {updateBook} />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}