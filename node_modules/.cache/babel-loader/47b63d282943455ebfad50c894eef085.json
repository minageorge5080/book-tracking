{"ast":null,"code":"var _jsxFileName = \"/Users/minageorge/Workspace/Minaroid/JS/book-tracking/src/pages/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport { BookList } from \"../components/BooksList\";\nimport { search, update, getAll } from \"../BooksAPI\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchPage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [books, setBooks] = useState([]);\n  const [myBooks, setMyBooks] = useState([]);\n  useEffect(() => {\n    fetchMyBooks();\n  }, []);\n\n  const fetchMyBooks = async () => {\n    await getAll().then(books => setMyBooks(books));\n  };\n\n  const queryValueChange = async query => {\n    await search(query, 20).then(booksResults => {\n      booksResults.forEach((book, index) => {\n        var _myBooks$map;\n\n        if ((myBooks === null || myBooks === void 0 ? void 0 : (_myBooks$map = myBooks.map(e => e.title)) === null || _myBooks$map === void 0 ? void 0 : _myBooks$map.includes(book.title)) === true) {}\n      });\n      const res = booksResults.filter(item => myBooks.includes(item));\n      console.log(myBooks.includes(myBooks[0])); // myBooks?.forEach((book) => {\n      //   // let myBook = booksResults?.find(e => e?.title === book?.title)\n      //   // myBook.s = 4\n      // }) \n\n      setBooks(booksResults);\n    });\n  };\n\n  const updateBook = async (book, shelf) => {\n    await update(book, shelf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"close-search\",\n        onClick: () => navigate(-1),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => queryValueChange(e.target.value),\n          placeholder: \"Search by title, author, or ISBN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      title: \"Search Results: \",\n      books: books,\n      onOptionSelected: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchPage, \"uw81JB4maDy3TfuptNfnaSC79lE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/minageorge/Workspace/Minaroid/JS/book-tracking/src/pages/SearchPage.js"],"names":["BookList","search","update","getAll","useNavigate","useEffect","useState","SearchPage","navigate","books","setBooks","myBooks","setMyBooks","fetchMyBooks","then","queryValueChange","query","booksResults","forEach","book","index","map","e","title","includes","res","filter","item","console","log","updateBook","shelf","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,aAAvC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY;AACb,GAFM,EAEL,EAFK,CAAT;;AAIA,QAAMA,YAAY,GAAG,YAAW;AAC5B,UAAMV,MAAM,GAAGW,IAAT,CAAeL,KAAD,IAAWG,UAAU,CAACH,KAAD,CAAnC,CAAN;AACD,GAFH;;AAIA,QAAMM,gBAAgB,GAAG,MAAMC,KAAN,IAAgB;AACvC,UAAMf,MAAM,CAACe,KAAD,EAAQ,EAAR,CAAN,CAAkBF,IAAlB,CAAwBG,YAAD,IAAkB;AAC7CA,MAAAA,YAAY,CAACC,OAAb,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAA;;AACpC,YAAG,CAAAT,OAAO,SAAP,IAAAA,OAAO,WAAP,4BAAAA,OAAO,CAAEU,GAAT,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAApB,+DAA4BC,QAA5B,CAAqCL,IAAI,CAACI,KAA1C,OAAqD,IAAxD,EAA6D,CAE5D;AACF,OAJD;AAKA,YAAME,GAAG,GAAGR,YAAY,CAACS,MAAb,CAAoBC,IAAI,IAAIhB,OAAO,CAACa,QAAR,CAAiBG,IAAjB,CAA5B,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAO,CAACa,QAAR,CAAiBb,OAAO,CAAC,CAAD,CAAxB,CAAZ,EAP6C,CAS7C;AAEA;AACA;AACA;;AACAD,MAAAA,QAAQ,CAACO,YAAD,CAAR;AACD,KAfK,CAAN;AAgBD,GAjBD;;AAmBA,QAAMa,UAAU,GAAG,OAAMX,IAAN,EAAYY,KAAZ,KAAsB;AACvC,UAAM7B,MAAM,CAACiB,IAAD,EAAOY,KAAP,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,cAAb;AACG,QAAA,OAAO,EAAE,MAAMvB,QAAQ,CAAC,CAAC,CAAF,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAIc,CAAD,IAAOP,gBAAgB,CAACO,CAAC,CAACU,MAAF,CAASC,KAAV,CAFpC;AAGE,UAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAI,kBAAnB;AAAuC,MAAA,KAAK,EAAIxB,KAAhD;AAAuD,MAAA,gBAAgB,EAAIqB;AAA3E;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBH,CAtDM;;GAAMvB,U;UACQH,W;;;KADRG,U","sourcesContent":["import { BookList } from \"../components/BooksList\";\nimport { search, update, getAll } from \"../BooksAPI\";\nimport {useNavigate} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nexport const SearchPage = () => {\n    const navigate = useNavigate();\n    const [books, setBooks] = useState([]);\n    const [myBooks, setMyBooks] = useState([]);\n\n    useEffect(() => {\n        fetchMyBooks()\n      },[])\n    \n    const fetchMyBooks = async() => {\n        await getAll().then((books) => setMyBooks(books))\n      }\n      \n    const queryValueChange = async(query) => {\n      await search(query, 20).then((booksResults) => {\n        booksResults.forEach((book, index) => {\n          if(myBooks?.map(e => e.title)?.includes(book.title) === true){\n            \n          }\n        });\n        const res = booksResults.filter(item => myBooks.includes(item));\n        console.log(myBooks.includes(myBooks[0]))\n\n        // myBooks?.forEach((book) => {\n         \n        //   // let myBook = booksResults?.find(e => e?.title === book?.title)\n        //   // myBook.s = 4\n        // }) \n        setBooks(booksResults)\n      })\n    }\n\n    const updateBook = async(book, shelf) => {\n      await update(book, shelf)\n    }\n\n    return (\n      <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <a className=\"close-search\"\n               onClick={() => navigate(-1)}>\n                Close\n            </a>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                onChange ={(e) => queryValueChange(e.target.value)}\n                placeholder=\"Search by title, author, or ISBN\"\n              />\n            </div>\n          </div>\n          <BookList title = {\"Search Results: \"} books = {books} onOptionSelected = {updateBook} />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}