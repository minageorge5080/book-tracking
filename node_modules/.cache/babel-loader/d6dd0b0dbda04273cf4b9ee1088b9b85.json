{"ast":null,"code":"var _jsxFileName = \"/Users/minageorge/Workspace/Minaroid/JS/book-tracking/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { BookList } from \"../components/BooksList\";\nimport { getAll, update } from \"../BooksAPI\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [allBooks, setAllBooks] = useState([]);\n  const [currentlyReadingBooks, setCurrentlyReadingBooks] = useState([]);\n  const [wantToReadBooks, setWantToReadBooks] = useState([]);\n  const [readBooks, setReadBooks] = useState([]);\n  useEffect(() => {\n    fetchAllBooks();\n  }, []);\n\n  const fetchAllBooks = async () => {\n    await getAll().then(books => {\n      setAllBooks(books);\n      setCurrentlyReadingBooks(books === null || books === void 0 ? void 0 : books.filter(book => (book === null || book === void 0 ? void 0 : book.shelf) == \"currentlyReading\"));\n      setWantToReadBooks(books === null || books === void 0 ? void 0 : books.filter(book => (book === null || book === void 0 ? void 0 : book.shelf) == \"wantToRead\"));\n      setReadBooks(books === null || books === void 0 ? void 0 : books.filter(book => (book === null || book === void 0 ? void 0 : book.shelf) == \"read\"));\n    });\n  };\n\n  const updateBook = async (book, shelf) => {\n    await update(book, shelf).then(result => {\n      setCurrentlyReadingBooks(currentlyReadingBooks === null || currentlyReadingBooks === void 0 ? void 0 : currentlyReadingBooks.filter(e => result === null || result === void 0 ? void 0 : result.currentlyReading.includes(e.id)));\n      setWantToReadBooks(wantToReadBooks === null || wantToReadBooks === void 0 ? void 0 : wantToReadBooks.filter(e => result === null || result === void 0 ? void 0 : result.wantToRead.includes(e.id)));\n      setReadBooks(readBooks === null || readBooks === void 0 ? void 0 : readBooks.filter(e => result === null || result === void 0 ? void 0 : result.read.includes(e.id)));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BookList, {\n      title: \"Currently Reading\",\n      books: currentlyReadingBooks,\n      onOptionSelected: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      title: \"Want to Read\",\n      books: wantToReadBooks,\n      onOptionSelected: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      title: \"Read\",\n      books: readBooks,\n      onOptionSelected: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_s(HomePage, \"LnH9zNuBgaY51EPJigPlqNhmc6k=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/minageorge/Workspace/Minaroid/JS/book-tracking/src/pages/HomePage.js"],"names":["BookList","getAll","update","useEffect","useState","HomePage","allBooks","setAllBooks","currentlyReadingBooks","setCurrentlyReadingBooks","wantToReadBooks","setWantToReadBooks","readBooks","setReadBooks","fetchAllBooks","then","books","filter","book","shelf","updateBook","result","e","currentlyReading","includes","id","wantToRead","read"],"mappings":"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","sourcesContent":["import { BookList } from \"../components/BooksList\";\nimport { getAll, update } from \"../BooksAPI\";\nimport { useEffect, useState } from \"react\";\n\nexport const HomePage = () => {\n    const [allBooks, setAllBooks] = useState([]);\n    const [currentlyReadingBooks, setCurrentlyReadingBooks] = useState([]);\n    const [wantToReadBooks, setWantToReadBooks] = useState([]);\n    const [readBooks, setReadBooks] = useState([]);\n\n    useEffect(() => {\n        fetchAllBooks()\n      },[])\n    \n    const fetchAllBooks = async() => {\n        await getAll().then((books) => {\n          setAllBooks(books)\n          setCurrentlyReadingBooks(books?.filter((book) => book?.shelf == \"currentlyReading\"))\n          setWantToReadBooks(books?.filter((book) => book?.shelf == \"wantToRead\"))\n          setReadBooks(books?.filter((book) => book?.shelf == \"read\"))\n        })\n      }\n      \n    const updateBook = async(book, shelf) => {\n       await update(book, shelf).then((result) => {\n        setCurrentlyReadingBooks(currentlyReadingBooks?.filter(e => result?.currentlyReading.includes(e.id)))\n        setWantToReadBooks(wantToReadBooks?.filter(e => result?.wantToRead.includes(e.id)))\n        setReadBooks(readBooks?.filter(e => result?.read.includes(e.id)))\n       }) \n      }\n\n    return (\n      <div>\n        <BookList title = {\"Currently Reading\"} books = {currentlyReadingBooks} onOptionSelected = {updateBook} />\n        <BookList title = {\"Want to Read\"} books = {wantToReadBooks} onOptionSelected = {updateBook} />\n        <BookList title = {\"Read\"} books = {readBooks} onOptionSelected = {updateBook} />\n      </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}