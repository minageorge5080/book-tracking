{"ast":null,"code":"var _jsxFileName = \"/Users/minageorge/Workspace/Minaroid/JS/book-tracking/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { BookList } from \"../components/BooksList\";\nimport { getAll, update } from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [allBooks, setAllBooks] = useState([]);\n  useEffect(() => {\n    fetchAllBooks();\n  }, []);\n\n  const fetchAllBooks = async () => {\n    await getAll().then(books => setAllBooks(books));\n  };\n\n  const updateBook = async (book, shelf) => {\n    await update(book, shelf).then(() => getAll()).then(books => setAllBooks(books));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BookList, {\n      title: \"Currently Reading\",\n      books: allBooks.filter(book => (book === null || book === void 0 ? void 0 : book.shelf) == \"currentlyReading\"),\n      onOptionSelected: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      title: \"Want to Read\",\n      books: allBooks.filter(book => (book === null || book === void 0 ? void 0 : book.shelf) == \"wantToRead\"),\n      onOptionSelected: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      title: \"Read\",\n      books: allBooks.filter(book => (book === null || book === void 0 ? void 0 : book.shelf) == \"read\"),\n      onOptionSelected: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\n_s(HomePage, \"ozT06l5TOhCt7xrH5eKIkJQqGv0=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/minageorge/Workspace/Minaroid/JS/book-tracking/src/pages/HomePage.js"],"names":["BookList","getAll","update","HomePage","allBooks","setAllBooks","useState","useEffect","fetchAllBooks","then","books","updateBook","book","shelf","filter"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,aAA/B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,aAAa;AACd,GAFM,EAEL,EAFK,CAAT;;AAIA,QAAMA,aAAa,GAAG,YAAW;AAC7B,UAAMP,MAAM,GAAGQ,IAAT,CAAeC,KAAD,IAAWL,WAAW,CAACK,KAAD,CAApC,CAAN;AACD,GAFH;;AAIA,QAAMC,UAAU,GAAG,OAAMC,IAAN,EAAYC,KAAZ,KAAsB;AACrC,UAAMX,MAAM,CAACU,IAAD,EAAOC,KAAP,CAAN,CAAoBJ,IAApB,CAAyB,MAAMR,MAAM,EAArC,EAAyCQ,IAAzC,CAA+CC,KAAD,IAAWL,WAAW,CAACK,KAAD,CAApE,CAAN;AACD,GAFH;;AAIA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAI,mBAAnB;AAAwC,MAAA,KAAK,EAAIN,QAAQ,CAACU,MAAT,CAAiBF,IAAD,IAAU,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,KAAN,KAAe,kBAAzC,CAAjD;AAA+G,MAAA,gBAAgB,EAAIF;AAAnI;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAI,cAAnB;AAAmC,MAAA,KAAK,EAAIP,QAAQ,CAACU,MAAT,CAAiBF,IAAD,IAAU,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,KAAN,KAAe,YAAzC,CAA5C;AAAoG,MAAA,gBAAgB,EAAIF;AAAxH;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAI,MAAnB;AAA2B,MAAA,KAAK,EAAIP,QAAQ,CAACU,MAAT,CAAiBF,IAAD,IAAU,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,KAAN,KAAe,MAAzC,CAApC;AAAsF,MAAA,gBAAgB,EAAIF;AAA1G;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOH,CArBM;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import { BookList } from \"../components/BooksList\";\nimport { getAll, update } from \"../BooksAPI\";\n\nexport const HomePage = () => {\n    const [allBooks, setAllBooks] = useState([]);\n    useEffect(() => {\n        fetchAllBooks()\n      },[])\n    \n    const fetchAllBooks = async() => {\n        await getAll().then((books) => setAllBooks(books))\n      }\n      \n    const updateBook = async(book, shelf) => {\n        await update(book, shelf).then(() => getAll()).then((books) => setAllBooks(books))\n      }\n\n    return (\n      <div>\n        <BookList title = {\"Currently Reading\"} books = {allBooks.filter((book) => book?.shelf == \"currentlyReading\")} onOptionSelected = {updateBook} />\n        <BookList title = {\"Want to Read\"} books = {allBooks.filter((book) => book?.shelf == \"wantToRead\")} onOptionSelected = {updateBook} />\n        <BookList title = {\"Read\"} books = {allBooks.filter((book) => book?.shelf == \"read\")} onOptionSelected = {updateBook} />\n      </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}